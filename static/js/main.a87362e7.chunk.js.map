{"version":3,"sources":["components/Main/Main.module.css","components/Aside/Aside.module.css","components/hoc/Layout/LayoutModern.module.css","components/Nav/Nav.module.css","components/Article/Article.module.css","components/Footer/Footer.module.css","App.js","serviceWorker.js","components/Nav/Nav.js","components/Aside/Aside.js","components/Article/Article.js","components/Main/Main.js","components/Footer/Footer.js","index.js","components/hoc/Layout/LayoutModern.js"],"names":["module","exports","App","props","layout","React","createElement","Boolean","window","location","hostname","match","Nav","className","classes","Aside","style","type","join","Article","Main","wrapper","sidebar","includes","Footer","ReactDOM","render","LayoutModern","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,gBCAtDD,EAAOC,QAAU,CAAC,eAAe,4BAA4B,gBAAgB,+B,kBCA7ED,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,6JCWZC,MATf,SAAaC,GAAQ,IACZC,EAAUD,EAAVC,OAEP,OACEC,IAAMC,cAAcF,ICKJG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCfS,SAASC,IACpB,OACI,yBAAKC,UAAWC,IAAQF,KAAxB,O,oCCFO,SAASG,EAAMZ,GAE1B,IAAMa,EAAQ,CACVF,IAAQC,MACRD,IAAQX,EAAMc,OAGlB,OACI,2BAAOJ,UAAWG,EAAME,KAAK,MAA7B,S,oBCRO,SAASC,IACpB,OACI,6BAASN,UAAWC,IAAQK,SAA5B,WCAO,SAASC,EAAKjB,GAEzB,OACI,0BAAMU,UAAWC,IAAQM,MACrB,yBAAKP,UAAWC,IAAQO,SACnBlB,EAAMmB,QAAQC,SAAS,SAAW,kBAACR,EAAD,CAAOE,KAAK,iBAC/C,kBAACE,EAAD,MACChB,EAAMmB,QAAQC,SAAS,UAAY,kBAACR,EAAD,CAAOE,KAAK,oB,oBCTjD,SAASO,IACpB,OACI,4BAAQX,UAAWC,IAAQU,QAA3B,UCERC,IAASC,OAAO,kBAAC,EAAD,CAAKtB,OCDN,WACX,OACI,yBAAKS,UAAWC,IAAQa,cACpB,kBAACf,EAAD,MACA,kBAACQ,EAAD,CAAME,QAAQ,UACd,kBAACE,EAAD,UDJkCI,SAASC,eAAe,SN4HhE,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a87362e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__3fk0q\",\"wrapper\":\"Main_wrapper__1Wg8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left-sidebar\":\"Aside_left-sidebar__3YZQO\",\"right-sidebar\":\"Aside_right-sidebar__370g7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutModern\":\"LayoutModern_LayoutModern__oh2VV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__2DTAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Article\":\"Article_Article__2Hph-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2kKoH\"};","import React from 'react';\nimport './App.css';\n\nfunction App(props) {\n  const {layout} = props\n\n  return (\n    React.createElement(layout)\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport classes from \"./Nav.module.css\"\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className={classes.Nav}>\r\n            nav\r\n        </nav>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Aside.module.css\"\r\n\r\nexport default function Aside(props) {\r\n\r\n    const style = [\r\n        classes.Aside,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (        \r\n        <aside className={style.join(' ')}>\r\n            aside\r\n        </aside>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Article.module.css\"\r\n\r\nexport default function Article() {\r\n    return (\r\n        <article className={classes.Article}>\r\n            article\r\n        </article>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Main.module.css\"\r\nimport Aside from '../Aside/Aside'\r\nimport Article from '../Article/Article'\r\n\r\nexport default function Main(props) {\r\n   \r\n    return (\r\n        <main className={classes.Main}>\r\n            <div className={classes.wrapper}>\r\n                {props.sidebar.includes(\"left\") && <Aside type=\"left-sidebar\" />}\r\n                <Article />\r\n                {props.sidebar.includes(\"right\") && <Aside type=\"right-sidebar\" />}\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Footer.module.css\"\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className={classes.Footer}>\r\n            footer\r\n        </footer>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport LayoutModern from './components/hoc/Layout/LayoutModern'\n\nReactDOM.render(<App layout={LayoutModern}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport classes from './LayoutModern.module.css'\r\nimport Nav from '../../Nav/Nav'\r\nimport Main from '../../Main/Main'\r\nimport Footer from '../../Footer/Footer'\r\n\r\nexport default function LayoutModern() {\r\n    return (\r\n        <div className={classes.LayoutModern}>\r\n            <Nav />\r\n            <Main sidebar=\"right\" />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}