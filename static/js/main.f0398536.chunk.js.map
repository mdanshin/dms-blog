{"version":3,"sources":["components/Nav/Nav.js","components/CardBig/CardBig.js","components/CardSmall/CardSmall.js","pages/Home/Home.js","pages/Contact.js","pages/About.js","components/Main/Main.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Nav","useState","state","setState","className","to","onClick","action","type","placeholder","CardBig","href","style","backgroundImage","height","backgroundSize","backgroundRepeat","CardSmall","Home","Contact","About","Main","routes","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wVAIe,SAASA,IAAO,IAAD,EAEAC,oBAAS,GAFT,mBAEnBC,EAFmB,KAEZC,EAFY,KAU1B,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAY,uDACnC,4BAAQA,UAAU,YAAYE,QAV1C,WACI,OACIH,GAAUD,KASF,0BAAME,UAAU,eAEpB,yBAAKA,UAAWF,EAAQ,oBAAsB,gBAC1C,wBAAIE,UAAU,MACV,4BACI,kBAAC,IAAD,CAAMC,GAAG,SAAT,+CAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,YAAT,oFAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,2CAGR,wBAAID,UAAU,MACV,0BAAMA,UAAU,OAAOG,OAAO,IAC1B,2BAAOH,UAAU,SAASI,KAAK,OAAOC,YAAY,uF,6BChC/D,SAASC,IACpB,OACI,yBAAKN,UAAW,WACZ,uBAAGO,KAAK,MACJ,yBAAKP,UAAU,gBACVQ,MAAO,CACHC,gBAAiB,oEACjBC,OAAQ,QACRC,eAAgB,QAChBC,iBAAkB,gBAI/B,yBAAKZ,UAAW,aACZ,wBAAIA,UAAW,aAAf,mLAGA,uBAAGA,UAAW,WAAd,goBAIA,6BACI,2BAAOA,UAAW,YAAlB,yDAEI,8BACI,uBAAGA,UAAW,kBAAmBO,KAAK,SAAtC,4GAEJ,0BAAMP,UAAW,OAAjB,MAEJ,2BAAOA,UAAW,QAAlB,mB,MC7BL,SAASa,IACpB,OACI,yBAAKb,UAAW,aACZ,yBAAKA,UAAW,cAChB,uBAAGO,KAAK,MACJ,yBAAKP,UAAU,QACVQ,MAAO,CACHC,gBAAiB,oEACjBC,OAAQ,QACRC,eAAgB,QAChBC,iBAAkB,iBAK/B,6BACI,wBAAIZ,UAAW,aAAf,mLAGA,uBAAGA,UAAW,WAAd,goBAIA,6BACI,2BAAOA,UAAW,YAAlB,yDAEI,8BACI,uBAAGA,UAAW,kBAAmBO,KAAK,SAAtC,4GAEJ,0BAAMP,UAAW,OAAjB,MAEJ,2BAAOA,UAAW,QAAlB,mBC7BL,SAASc,IACpB,OACI,yBAAKd,UAAW,OACZ,yBAAKA,UAAW,OACZ,kBAAC,EAAD,OAEJ,yBAAKA,UAAW,OAYZ,kBAAC,EAAD,QCrBD,SAASe,IACpB,OACI,4CCFO,SAASC,IACpB,OACI,0CCAO,SAASC,IACpB,IAAMC,ECGF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAACL,EAAD,OAEJ,kBAAC,IAAD,CAAOK,KAAK,UACR,kBAACJ,EAAD,QDbZ,OACI,0BAAMhB,UAAW,QACb,yBAAKA,UAAW,aACXkB,IEOFG,MAXf,WACE,OAEE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f0398536.chunk.js","sourcesContent":["import React, {useState} from \"react\"\r\nimport './Nav.scss'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Nav() {\r\n\r\n    const [state, setState] = useState(false)\r\n\r\n    function clickHandler() {\r\n        return (\r\n            setState(!state)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className=\"Nav\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"nav-brand\"><strong>IT Blog danshin.ms</strong></Link>\r\n                <button className=\"hamburger\" onClick={clickHandler}>\r\n                    <span className=\"hamburger\"></span>\r\n                </button>\r\n                <div className={state ? \"nav-collapse show\" : \"nav-collapse\" } >\r\n                    <ul className=\"mr\">\r\n                        <li>\r\n                            <Link to=\"/Home\">Главная</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/contact\">Обратная связь</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/about\">О блоге</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"ml\">\r\n                        <form className=\"form\" action=\"\">\r\n                            <input className=\"search\" type=\"text\" placeholder=\"Поиск по блогу...\"/>\r\n                        </form>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport './CardBig.scss'\r\n\r\nexport default function CardBig() {\r\n    return (\r\n        <div className={\"CardBig\"}>\r\n            <a href=\"#h\">\r\n                <div className=\"topfirstimage\"\r\n                     style={{\r\n                         backgroundImage: 'url(https://danshin.ms/assets/images/Deploy-squid-in-azure/0.png)',\r\n                         height: '200px',\r\n                         backgroundSize: 'cover',\r\n                         backgroundRepeat: 'no-repeat'\r\n                     }}>\r\n                </div>\r\n            </a>\r\n            <div className={\"card-body\"}>\r\n                <h2 className={\"card-head\"}>\r\n                    Развёртывание и настройка Squid Proxy в Microsoft Azure\r\n                </h2>\r\n                <p className={\"excerpt\"}>\r\n                    В этой статье Вы узнаете о том, как развернуть и настроить свой proxy сервер на основе популярного\r\n                    продукта Squid, в облачном сервисе...\r\n                </p>\r\n                <div>\r\n                    <small className={\"category\"}>\r\n                        Категория\r\n                        <span>\r\n                            <a className={\"category-anchor\"} href=\"#Home\"> Администрирование</a>\r\n                        </span>\r\n                        <span className={\"sep\"}>,</span>\r\n                    </small>\r\n                    <small className={\"date\"}>\r\n                        Feb 28, 2020\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './CardSmall.scss'\r\n\r\nexport default function CardSmall() {\r\n    return (\r\n        <div className={\"CardSmall\"}>\r\n            <div className={\"card-image\"}>\r\n            <a href=\"#h\">\r\n                <div className=\"image\"\r\n                     style={{\r\n                         backgroundImage: 'url(https://danshin.ms/assets/images/Deploy-squid-in-azure/0.png)',\r\n                         height: '200px',\r\n                         backgroundSize: 'cover',\r\n                         backgroundRepeat: 'no-repeat'\r\n                     }}>\r\n                </div>\r\n            </a>\r\n            </div>\r\n            <div>\r\n                <h2 className={\"card-head\"}>\r\n                    Развёртывание и настройка Squid Proxy в Microsoft Azure\r\n                </h2>\r\n                <p className={\"excerpt\"}>\r\n                    В этой статье Вы узнаете о том, как развернуть и настроить свой proxy сервер на основе популярного\r\n                    продукта Squid, в облачном сервисе...\r\n                </p>\r\n                <div>\r\n                    <small className={\"category\"}>\r\n                        Категория\r\n                        <span>\r\n                            <a className={\"category-anchor\"} href=\"#Home\"> Администрирование</a>\r\n                        </span>\r\n                        <span className={\"sep\"}>,</span>\r\n                    </small>\r\n                    <small className={\"date\"}>\r\n                        Feb 28, 2020\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport './Home.scss'\r\nimport CardBig from '../../components/CardBig/CardBig'\r\nimport CardSmall from \"../../components/CardSmall/CardSmall\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className={\"row\"}>\r\n            <div className={\"col\"}>\r\n                <CardBig />\r\n            </div>\r\n            <div className={\"col\"}>\r\n                {/*<div className={\"top-post\"}>*/}\r\n                {/*    <div className={\"img\"}></div>*/}\r\n                {/*    <div>*/}\r\n                {/*        <h2></h2>*/}\r\n                {/*        <small>*/}\r\n                {/*            <span>*/}\r\n                {/*                <a href=\"#home\">Home</a>*/}\r\n                {/*            </span>*/}\r\n                {/*        </small>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n                <CardSmall/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <h1>\r\n            Contact Page\r\n        </h1>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default function About() {\r\n    return (\r\n        <h1>\r\n            About Page\r\n        </h1>\r\n    )\r\n}","import React from \"react\"\r\nimport './Main.scss'\r\nimport useRoutes from \"../../routes\";\r\n\r\nexport default function Main() {\r\n    const routes = useRoutes()\r\n    return (\r\n        <main className={\"Main\"}>\r\n            <div className={\"container\"}>\r\n                {routes}\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from \"react\"\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from \"./pages/Home/Home\"\r\nimport Contact from \"./pages/Contact\"\r\nimport About from \"./pages/About\"\r\n\r\nexport default function useRoutes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route exact path=\"/Home\">\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/Contact\">\r\n                <Contact />\r\n            </Route>\r\n            <Route path=\"/About\">\r\n                <About />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Nav from './components/Nav/Nav'\r\nimport Main from './components/Main/Main'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Router>\r\n        <Nav />\r\n        <Main />\r\n    </Router>\r\n        \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}