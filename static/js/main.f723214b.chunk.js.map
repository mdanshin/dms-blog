{"version":3,"sources":["components/Main/Main.module.css","components/Aside/Aside.module.css","components/Article/Article.module.css","assets/images/1200px-React-icon.svg.png","components/Menu/Menu.js","components/Aside/Aside.js","components/Article/Article.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","variant","Aside","props","style","classes","join","Article","Card","width","Img","src","Body","Title","Text","Main","wrapper","sidebar","includes","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,mBCAtDD,EAAOC,QAAU,CAAC,eAAe,4BAA4B,gBAAgB,+B,mBCA7ED,EAAOC,QAAU,CAAC,QAAU,2B,mBCD5BD,EAAOC,QAAU,IAA0B,mD,mMCQ5B,SAASC,IACpB,OACJ,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,mBACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,QACA,kBAACQ,EAAA,EAAD,CAAaC,MAAM,WAAWL,GAAG,sBAC/B,kBAACI,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,UACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,kBACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,aACA,kBAACQ,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,oBAGJ,kBAACY,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASV,UAAU,YACxD,kBAACW,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,a,8CCxBS,SAASC,EAAMC,GAE1B,IAAMC,EAAQ,CACVC,IAAQH,MACRG,IAAQF,EAAML,OAGlB,OACI,2BAAOT,UAAWe,EAAME,KAAK,MAA7B,S,8CCLO,SAASC,IACpB,OACI,6BAASlB,UAAWgB,IAAQE,SACxB,kBAACC,EAAA,EAAD,CAAMJ,MAAO,CAAEK,MAAO,UAChC,kBAACD,EAAA,EAAKE,IAAN,CAAUT,QAAQ,MAAMU,IAAKD,MAC7B,kBAACF,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,mBACA,kBAACL,EAAA,EAAKM,KAAN,uGAIA,kBAACd,EAAA,EAAD,CAAQC,QAAQ,WAAhB,mBCZW,SAASc,EAAKZ,GAEzB,OACI,0BAAMd,UAAWgB,IAAQU,MACrB,yBAAK1B,UAAWgB,IAAQW,SACnBb,EAAMc,QAAQC,SAAS,SAAW,kBAAChB,EAAD,CAAOJ,KAAK,iBAC/C,kBAACS,EAAD,MACCJ,EAAMc,QAAQC,SAAS,UAAY,kBAAChB,EAAD,CAAOJ,KAAK,oBCIjDqB,MAVf,WACE,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC1C,EAAD,MACA,kBAACqC,EAAD,CAAME,QAAQ,YCEAI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f723214b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__3fk0q\",\"wrapper\":\"Main_wrapper__1Wg8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left-sidebar\":\"Aside_left-sidebar__3YZQO\",\"right-sidebar\":\"Aside_right-sidebar__370g7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Article\":\"Article_Article__2Hph-\"};","module.exports = __webpack_public_path__ + \"static/media/1200px-React-icon.svg.580ffd26.png\";","import React from \"react\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nexport default function Menu() {\r\n    return (\r\n<Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#link\">Link</Nav.Link>\r\n      <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Aside.module.css\"\r\n\r\nexport default function Aside(props) {\r\n\r\n    const style = [\r\n        classes.Aside,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (        \r\n        <aside className={style.join(' ')}>\r\n            aside\r\n        </aside>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Article.module.css\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Img from \"../../assets/images/1200px-React-icon.svg.png\"\r\n\r\nexport default function Article() {\r\n    return (\r\n        <article className={classes.Article}>\r\n            <Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={Img} />\r\n  <Card.Body>\r\n    <Card.Title>Card Title</Card.Title>\r\n    <Card.Text>\r\n      Some quick example text to build on the card title and make up the bulk of\r\n      the card's content.\r\n    </Card.Text>\r\n    <Button variant=\"primary\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n        </article>\r\n    )\r\n}","import React from \"react\"\r\nimport classes from \"./Main.module.css\"\r\nimport Aside from '../Aside/Aside'\r\nimport Article from '../Article/Article'\r\n\r\nexport default function Main(props) {\r\n   \r\n    return (\r\n        <main className={classes.Main}>\r\n            <div className={classes.wrapper}>\r\n                {props.sidebar.includes(\"left\") && <Aside type=\"left-sidebar\" />}\r\n                <Article />\r\n                {props.sidebar.includes(\"right\") && <Aside type=\"right-sidebar\" />}\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react';\nimport Menu from './components/Menu/Menu'\nimport Container from 'react-bootstrap/Container'\nimport Main from './components/Main/Main'\n\n\nfunction App() {\n  return (\n    <Container>\n      <Menu />\n      <Main sidebar=\"right\" />\n    </Container>\n    // <Footer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}